<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.api.hanley.dao.UsersMapper">
  <resultMap id="BaseResultMap" type="com.api.hanley.entity.dto.Users">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="age" jdbcType="VARCHAR" property="age" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="del_flag" jdbcType="BIT" property="del_flag" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
    <result column="address" jdbcType="VARCHAR" property="address" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.api.hanley.entity.dto.Users">
    insert into users (id, username, `password`, 
      age, create_time, del_flag, 
      sex, update_time,address)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{age,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, #{del_flag,jdbcType=BIT}, 
      #{sex,jdbcType=VARCHAR}, #{update_time,jdbcType=TIMESTAMP},#{address,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.api.hanley.entity.dto.Users">
    update users
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      age = #{age,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      del_flag = #{del_flag,jdbcType=BIT},
      sex = #{sex,jdbcType=VARCHAR},
      update_time = #{update_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, username, `password`, age, create_time, del_flag, sex, update_time, address
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, username, `password`, age, create_time, del_flag, sex, update_time, address
    from users
  </select>
  <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, username, `password`, age, create_time, del_flag, sex, update_time, address
    from users
    where username = #{username,jdbcType=VARCHAR}
  </select>
</mapper>